<h3 id=a>Goals</h3>
<p>Table 1 attempts to capture some simple goals. If something was known from the crosswire site, that was just copied.</p>

<table border=1>
	<caption>Table a1 - Tentative goals</caption>
	<tr>
		<th>No</th>
		<th>Name</th>
		<th>Priority</th>
		<th>Comment(s)</th>
	</tr>
	<tr>
		<td>1</td>
		<td>Christian service</td>
		<td></td>
		<td>collaborate on free, open-source projects aimed at serving the Christian organizations (churches) including those that can't afford or are otherwise not equipped with bible resources.</td>
	</tr>
	<tr>
		<td>2a</td>
		<td>distribute scripture to as many people within a domain as possible-electronic</td>
		<td></td>
		<td>Users and operators should be able to study the bible without making compromises. That includes not having to compromise by using a platform other than their favorite.
		</td>
	</tr>
		<td>2b</td>
		<td>distribute scripture to as many people within a domain as possible-paper</td>
		<td></td>
		<td>Users and operators should be able to study the bible without making compromises. Some people prefer to avoid (don't like) electronic devices or may not have an electronic device. Paper printouts may suit this group.
		</td>
	</tr>


	<tr>
		<td>3a</td>
		<td>Modules-basic</td>
		<td></td>
		<td>categorize modules into 1) bible texts, 2) commentaries, 3) lexicons/dictionaries, 4) Glossaries, 5) Daily devotionals, and 6) generic books).
		<br> 
		For bible texts, attempt to minimize workload by sharing data. For example, SWORD modules in KJV doesn't have to be a different KJV than project Gutenberg, if the files are shared. 
		</td>
	<!-- details ... 
		The missions special group can include a lot of subjects - health, buildings, transportation, etc.

		evangelism: Should the technology domain be involved in evangelism, such as optimizing the presentation / marketing of bible apps? Do the Android and Apple stores have the ability to reach those using other human languages? Are the Android/Apple stores unable to reach any locations?
		
	-->
	</tr>

	<tr>
		<td>3b</td>
		<td>Modules-enhancements</td>
		<td></td>
		<td>A lot more categories are in use beyond the module basics. Often there are special books or studies for children (Awana, Good News Club), youth, men, women, seniors, widows & widowers, etc. Further, worship (music), evangelism (outreach), missions categories exist. 
		<br>
		Special categories may also include preserving original scriptures from which other translations are derived, and facilitating local church libraries. 
		</td>
	<!-- details ... 
		The missions special group can include a lot of subjects - health, buildings, transportation, etc.

		evangelism: Should the technology domain be involved in evangelism, such as optimizing the presentation / marketing of bible apps so people are more likely to try and install a bible app?
	-->
	</tr>

	<tr>
		<td>4</td>
		<td>Module testing</td>
		<td></td>
		<td>Support review of modules. The label of cult / unorthodox / questionable material is one example where this already occurred. But more assessments are possible and mentioned in some bible studies such as how a particular verse or section was translated. Consider a feedback mechanism.</td>
	<!-- details ...
	Module testing isn't software testing. It is to defend doctrine. Learning from history, 1 Tim 1:1-3 records how someone was able to introduce "strange doctrine", which Timothy needed to defend against. Likewise, Galatians 1:6-7 records how that church started to desert Christ.
	-->
	</tr>

	<tr>
		<td>5</td>
		<td>Scripture and software maintenance</td>
		<td></td>
		<td>Scripture was previously on stone tablets (Ex 24:12, etc) and scrolls (Jer 36:2, etc). In the modern day, digital data and software programs are more common than stone and scrolls. Supporting the modern communications involves some dealing in data and software. 
		<br>Maintenance and simplification of software can help minimize the chances of divided [software] kingdoms. If the burden is allowed to increase, the complexity/yoke could become too much for some, leading to a split (1 Kings 12).

		</td>
		<!-- details ...
		<br>
		Allow files to be converted to other formats unless there is a reason not to allow it.

		Are the buttons, menus, help, etc easy to use?

		Can non-computer people understand the most basic activities of maintenance without a lot of software training? For example, copying all the content to another backup, verifying the content is not corrupted.

		Is there a single process to handle enhancement/trouble reports or is this complicated by being split among different software sub-projects?

	Software size control was a goal copied from Caesar. Prevent uncontrolled growth in the amount of software that must be developed.

		-->
	</tr>

	<tr>
		<td>6</td>
		<td>Limitations</td>
		<td></td>
		<td>Be aware if there is a limitation that some places or countries can't be reached by Google play, Apple store, Microsoft installer, and other internet bibles (<a href="https://www.persecution.com/">link</a>). Where there are limitations, recognize other methods will have priority.</td>
		<!-- details ...
		-->
	</tr>

</table>
