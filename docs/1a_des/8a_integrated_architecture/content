
<h3>Functional Architecture</h3>
Support apps that make it easy for the average computer operator to study. 

<h3>Physical Architecture</h3>
Include plans to generate paper bibles.

<h3>Reference Architecture</h3>
Maintain original scriptures along with other modules. All the translations for many languages are excellent, but originals are especially significant.

<h3>Enterprise Architecture</h3>
<ul>
<li>Data 1: When possible, allow modules to be used by other organizations. An example is Gutenberg not having to maintain another KJV bible. Being able to convert SWORD KJV module and get it into a different format (PDF, HTML, etc) may allow use of the same bible text.</li>
<li>Data 2: Include methods to verify the integrity of data (scriptures), etc. </li>
<li>Software: When possible, attempt process communications that are not programming language specific. If a language change occurs, this may allow interchanging smaller piece(s) at a time instead being limited to a giant whole change.</li>
<li>Development: Attempt to make the starter examples for development as easy as possible to learn such that any new programmers can get up to speed faster.</li>
</ul>
